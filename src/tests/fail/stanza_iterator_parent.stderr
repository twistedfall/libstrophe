error[E0597]: `stanza` does not live long enough
  --> src/tests/fail/stanza_iterator_parent.rs:7:20
   |
5  |     let _a = {
   |         -- borrow later stored here
6  |         let stanza = Stanza::new();
   |             ------ binding `stanza` declared here
7  |         let child_iter = stanza.children();
   |                          ^^^^^^ borrowed value does not live long enough
...
10 |     };
   |     - `stanza` dropped here while still borrowed

error[E0505]: cannot move out of `stanza` because it is borrowed
 --> src/tests/fail/stanza_iterator_parent.rs:8:8
  |
6 |         let stanza = Stanza::new();
  |             ------ binding `stanza` declared here
7 |         let child_iter = stanza.children();
  |                          ------ borrow of `stanza` occurs here
8 |         drop(stanza);
  |              ^^^^^^ move out of `stanza` occurs here
9 |         child_iter
  |         ---------- borrow later used here
  |
help: consider cloning the value if the performance cost is acceptable
  |
7 |         let child_iter = stanza.clone().children();
  |                                ++++++++

error[E0597]: `stanza` does not live long enough
  --> src/tests/fail/stanza_iterator_parent.rs:15:24
   |
13 |     let _a = {
   |         -- borrow later stored here
14 |         let stanza = Stanza::new();
   |             ------ binding `stanza` declared here
15 |         let mut child_iter = stanza.children();
   |                              ^^^^^^ borrowed value does not live long enough
...
20 |     };
   |     - `stanza` dropped here while still borrowed

error[E0505]: cannot move out of `stanza` because it is borrowed
  --> src/tests/fail/stanza_iterator_parent.rs:18:8
   |
14 |         let stanza = Stanza::new();
   |             ------ binding `stanza` declared here
15 |         let mut child_iter = stanza.children();
   |                              ------ borrow of `stanza` occurs here
...
18 |         drop(stanza);
   |              ^^^^^^ move out of `stanza` occurs here
19 |         child
   |         ----- borrow later used here
   |
help: consider cloning the value if the performance cost is acceptable
   |
15 |         let mut child_iter = stanza.clone().children();
   |                                    ++++++++

error[E0597]: `stanza` does not live long enough
  --> src/tests/fail/stanza_iterator_parent.rs:25:20
   |
23 |     let _a = {
   |         -- borrow later stored here
24 |         let mut stanza = Stanza::new();
   |             ---------- binding `stanza` declared here
25 |         let child_iter = stanza.children_mut();
   |                          ^^^^^^ borrowed value does not live long enough
...
28 |     };
   |     - `stanza` dropped here while still borrowed

error[E0505]: cannot move out of `stanza` because it is borrowed
  --> src/tests/fail/stanza_iterator_parent.rs:26:8
   |
24 |         let mut stanza = Stanza::new();
   |             ---------- binding `stanza` declared here
25 |         let child_iter = stanza.children_mut();
   |                          ------ borrow of `stanza` occurs here
26 |         drop(stanza);
   |              ^^^^^^ move out of `stanza` occurs here
27 |         child_iter
   |         ---------- borrow later used here

error[E0596]: cannot borrow `stanza` as mutable, as it is not declared as mutable
  --> src/tests/fail/stanza_iterator_parent.rs:33:24
   |
33 |         let mut child_iter = stanza.children_mut();
   |                              ^^^^^^ cannot borrow as mutable
   |
help: consider changing this to be mutable
   |
32 |         let mut stanza = Stanza::new();
   |             +++

error[E0505]: cannot move out of `stanza` because it is borrowed
  --> src/tests/fail/stanza_iterator_parent.rs:36:8
   |
32 |         let stanza = Stanza::new();
   |             ------ binding `stanza` declared here
33 |         let mut child_iter = stanza.children_mut();
   |                              ------ borrow of `stanza` occurs here
...
36 |         drop(stanza);
   |              ^^^^^^ move out of `stanza` occurs here
37 |         child
   |         ----- borrow later used here
